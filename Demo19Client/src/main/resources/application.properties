spring.application.name=DemoClient
spring.datasource.url=jdbc:mysql://localhost:3306/petistaan
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
info.app.name=${spring.application.name}
info.message=Subscribe Code With Aashiq to learn Java


# -----------------------------------------------
# Spring Boot Admin Client Configuration
# -----------------------------------------------

# URL of the Spring Boot Admin server to which this client should register.
# Example: Admin server is running on http://localhost:9090
# You can see this in the Spring Boot Admin UI under "Applications" -> your client.
spring.boot.admin.client.url=http://localhost:9090

# The URL at which this client exposes its own management endpoints.
# This tells the Admin server how to reach this client (like /actuator endpoints).
# This will be shown in the Admin UI as the "Service URL".
spring.boot.admin.client.instance.service-base-url=http://localhost:8080

# Unique identifier for this client instance in the Admin server.
# If you set a static value like 'unique-client-id', it will remain the same across restarts.
# If left empty, Spring Boot Admin generates a random instance ID at each startup.
# You will see this in Admin UI as "Instance ID".
spring.boot.admin.client.instance.metadata.instance-id=unique-client-id

# -----------------------------------------------
# Actuator Endpoint Configuration
# -----------------------------------------------

# Always show sensitive values in the /actuator/env endpoint.
# Normally, sensitive properties (passwords, API keys) are hidden.
# Setting 'always' allows you to view all property values.
# Access via: http://localhost:8080/actuator/env
# Example: spring.datasource.password will now be visible.
management.endpoint.env.show-values=always

# Always show property values in the /actuator/configprops endpoint.
# This endpoint lists all @ConfigurationProperties beans and their values.
# Access via: http://localhost:8080/actuator/configprops
# Example: You can see spring.boot.admin.client.url and instance metadata values here.
management.endpoint.configprops.show-values=always

# -----------------------------------------------
# Logging Configuration
# -----------------------------------------------

# Name of the log file for this application.
# Logs will be written to this file in the application directory.
# Example: DemoClient.log
logging.file.name=DemoClient.log

